/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.trackunit.can;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CanProfileDetail extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1253199243887609445L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CanProfileDetail\",\"namespace\":\"com.trackunit.can\",\"fields\":[{\"name\":\"canProfile\",\"type\":[\"null\",\"int\"],\"doc\":\"CAN profile ID\",\"default\":null},{\"name\":\"rank\",\"type\":[\"null\",\"int\"],\"doc\":\"CAN profile rank\",\"default\":null},{\"name\":\"profileName\",\"type\":[\"null\",\"string\"],\"doc\":\"Profile name\",\"default\":null},{\"name\":\"machine_insights_mapping\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"double\"}],\"doc\":\"Mapping of machine insights to average values\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CanProfileDetail> ENCODER =
      new BinaryMessageEncoder<CanProfileDetail>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CanProfileDetail> DECODER =
      new BinaryMessageDecoder<CanProfileDetail>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CanProfileDetail> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CanProfileDetail> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CanProfileDetail> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CanProfileDetail>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CanProfileDetail to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CanProfileDetail from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CanProfileDetail instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CanProfileDetail fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** CAN profile ID */
  @Deprecated public java.lang.Integer canProfile;
  /** CAN profile rank */
  @Deprecated public java.lang.Integer rank;
  /** Profile name */
  @Deprecated public java.lang.CharSequence profileName;
  /** Mapping of machine insights to average values */
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.Double> machine_insights_mapping;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CanProfileDetail() {}

  /**
   * All-args constructor.
   * @param canProfile CAN profile ID
   * @param rank CAN profile rank
   * @param profileName Profile name
   * @param machine_insights_mapping Mapping of machine insights to average values
   */
  public CanProfileDetail(java.lang.Integer canProfile, java.lang.Integer rank, java.lang.CharSequence profileName, java.util.Map<java.lang.CharSequence,java.lang.Double> machine_insights_mapping) {
    this.canProfile = canProfile;
    this.rank = rank;
    this.profileName = profileName;
    this.machine_insights_mapping = machine_insights_mapping;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return canProfile;
    case 1: return rank;
    case 2: return profileName;
    case 3: return machine_insights_mapping;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: canProfile = (java.lang.Integer)value$; break;
    case 1: rank = (java.lang.Integer)value$; break;
    case 2: profileName = (java.lang.CharSequence)value$; break;
    case 3: machine_insights_mapping = (java.util.Map<java.lang.CharSequence,java.lang.Double>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'canProfile' field.
   * @return CAN profile ID
   */
  public java.lang.Integer getCanProfile() {
    return canProfile;
  }


  /**
   * Sets the value of the 'canProfile' field.
   * CAN profile ID
   * @param value the value to set.
   */
  public void setCanProfile(java.lang.Integer value) {
    this.canProfile = value;
  }

  /**
   * Gets the value of the 'rank' field.
   * @return CAN profile rank
   */
  public java.lang.Integer getRank() {
    return rank;
  }


  /**
   * Sets the value of the 'rank' field.
   * CAN profile rank
   * @param value the value to set.
   */
  public void setRank(java.lang.Integer value) {
    this.rank = value;
  }

  /**
   * Gets the value of the 'profileName' field.
   * @return Profile name
   */
  public java.lang.CharSequence getProfileName() {
    return profileName;
  }


  /**
   * Sets the value of the 'profileName' field.
   * Profile name
   * @param value the value to set.
   */
  public void setProfileName(java.lang.CharSequence value) {
    this.profileName = value;
  }

  /**
   * Gets the value of the 'machine_insights_mapping' field.
   * @return Mapping of machine insights to average values
   */
  public java.util.Map<java.lang.CharSequence,java.lang.Double> getMachineInsightsMapping() {
    return machine_insights_mapping;
  }


  /**
   * Sets the value of the 'machine_insights_mapping' field.
   * Mapping of machine insights to average values
   * @param value the value to set.
   */
  public void setMachineInsightsMapping(java.util.Map<java.lang.CharSequence,java.lang.Double> value) {
    this.machine_insights_mapping = value;
  }

  /**
   * Creates a new CanProfileDetail RecordBuilder.
   * @return A new CanProfileDetail RecordBuilder
   */
  public static com.trackunit.can.CanProfileDetail.Builder newBuilder() {
    return new com.trackunit.can.CanProfileDetail.Builder();
  }

  /**
   * Creates a new CanProfileDetail RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CanProfileDetail RecordBuilder
   */
  public static com.trackunit.can.CanProfileDetail.Builder newBuilder(com.trackunit.can.CanProfileDetail.Builder other) {
    if (other == null) {
      return new com.trackunit.can.CanProfileDetail.Builder();
    } else {
      return new com.trackunit.can.CanProfileDetail.Builder(other);
    }
  }

  /**
   * Creates a new CanProfileDetail RecordBuilder by copying an existing CanProfileDetail instance.
   * @param other The existing instance to copy.
   * @return A new CanProfileDetail RecordBuilder
   */
  public static com.trackunit.can.CanProfileDetail.Builder newBuilder(com.trackunit.can.CanProfileDetail other) {
    if (other == null) {
      return new com.trackunit.can.CanProfileDetail.Builder();
    } else {
      return new com.trackunit.can.CanProfileDetail.Builder(other);
    }
  }

  /**
   * RecordBuilder for CanProfileDetail instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CanProfileDetail>
    implements org.apache.avro.data.RecordBuilder<CanProfileDetail> {

    /** CAN profile ID */
    private java.lang.Integer canProfile;
    /** CAN profile rank */
    private java.lang.Integer rank;
    /** Profile name */
    private java.lang.CharSequence profileName;
    /** Mapping of machine insights to average values */
    private java.util.Map<java.lang.CharSequence,java.lang.Double> machine_insights_mapping;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.trackunit.can.CanProfileDetail.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.canProfile)) {
        this.canProfile = data().deepCopy(fields()[0].schema(), other.canProfile);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.rank)) {
        this.rank = data().deepCopy(fields()[1].schema(), other.rank);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.profileName)) {
        this.profileName = data().deepCopy(fields()[2].schema(), other.profileName);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.machine_insights_mapping)) {
        this.machine_insights_mapping = data().deepCopy(fields()[3].schema(), other.machine_insights_mapping);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing CanProfileDetail instance
     * @param other The existing instance to copy.
     */
    private Builder(com.trackunit.can.CanProfileDetail other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.canProfile)) {
        this.canProfile = data().deepCopy(fields()[0].schema(), other.canProfile);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.rank)) {
        this.rank = data().deepCopy(fields()[1].schema(), other.rank);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.profileName)) {
        this.profileName = data().deepCopy(fields()[2].schema(), other.profileName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.machine_insights_mapping)) {
        this.machine_insights_mapping = data().deepCopy(fields()[3].schema(), other.machine_insights_mapping);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'canProfile' field.
      * CAN profile ID
      * @return The value.
      */
    public java.lang.Integer getCanProfile() {
      return canProfile;
    }


    /**
      * Sets the value of the 'canProfile' field.
      * CAN profile ID
      * @param value The value of 'canProfile'.
      * @return This builder.
      */
    public com.trackunit.can.CanProfileDetail.Builder setCanProfile(java.lang.Integer value) {
      validate(fields()[0], value);
      this.canProfile = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'canProfile' field has been set.
      * CAN profile ID
      * @return True if the 'canProfile' field has been set, false otherwise.
      */
    public boolean hasCanProfile() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'canProfile' field.
      * CAN profile ID
      * @return This builder.
      */
    public com.trackunit.can.CanProfileDetail.Builder clearCanProfile() {
      canProfile = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'rank' field.
      * CAN profile rank
      * @return The value.
      */
    public java.lang.Integer getRank() {
      return rank;
    }


    /**
      * Sets the value of the 'rank' field.
      * CAN profile rank
      * @param value The value of 'rank'.
      * @return This builder.
      */
    public com.trackunit.can.CanProfileDetail.Builder setRank(java.lang.Integer value) {
      validate(fields()[1], value);
      this.rank = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'rank' field has been set.
      * CAN profile rank
      * @return True if the 'rank' field has been set, false otherwise.
      */
    public boolean hasRank() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'rank' field.
      * CAN profile rank
      * @return This builder.
      */
    public com.trackunit.can.CanProfileDetail.Builder clearRank() {
      rank = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'profileName' field.
      * Profile name
      * @return The value.
      */
    public java.lang.CharSequence getProfileName() {
      return profileName;
    }


    /**
      * Sets the value of the 'profileName' field.
      * Profile name
      * @param value The value of 'profileName'.
      * @return This builder.
      */
    public com.trackunit.can.CanProfileDetail.Builder setProfileName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.profileName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'profileName' field has been set.
      * Profile name
      * @return True if the 'profileName' field has been set, false otherwise.
      */
    public boolean hasProfileName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'profileName' field.
      * Profile name
      * @return This builder.
      */
    public com.trackunit.can.CanProfileDetail.Builder clearProfileName() {
      profileName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'machine_insights_mapping' field.
      * Mapping of machine insights to average values
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.Double> getMachineInsightsMapping() {
      return machine_insights_mapping;
    }


    /**
      * Sets the value of the 'machine_insights_mapping' field.
      * Mapping of machine insights to average values
      * @param value The value of 'machine_insights_mapping'.
      * @return This builder.
      */
    public com.trackunit.can.CanProfileDetail.Builder setMachineInsightsMapping(java.util.Map<java.lang.CharSequence,java.lang.Double> value) {
      validate(fields()[3], value);
      this.machine_insights_mapping = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'machine_insights_mapping' field has been set.
      * Mapping of machine insights to average values
      * @return True if the 'machine_insights_mapping' field has been set, false otherwise.
      */
    public boolean hasMachineInsightsMapping() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'machine_insights_mapping' field.
      * Mapping of machine insights to average values
      * @return This builder.
      */
    public com.trackunit.can.CanProfileDetail.Builder clearMachineInsightsMapping() {
      machine_insights_mapping = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CanProfileDetail build() {
      try {
        CanProfileDetail record = new CanProfileDetail();
        record.canProfile = fieldSetFlags()[0] ? this.canProfile : (java.lang.Integer) defaultValue(fields()[0]);
        record.rank = fieldSetFlags()[1] ? this.rank : (java.lang.Integer) defaultValue(fields()[1]);
        record.profileName = fieldSetFlags()[2] ? this.profileName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.machine_insights_mapping = fieldSetFlags()[3] ? this.machine_insights_mapping : (java.util.Map<java.lang.CharSequence,java.lang.Double>) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CanProfileDetail>
    WRITER$ = (org.apache.avro.io.DatumWriter<CanProfileDetail>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CanProfileDetail>
    READER$ = (org.apache.avro.io.DatumReader<CanProfileDetail>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.canProfile == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.canProfile);
    }

    if (this.rank == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.rank);
    }

    if (this.profileName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.profileName);
    }

    if (this.machine_insights_mapping == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.machine_insights_mapping.size();
      out.writeMapStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (java.util.Map.Entry<java.lang.CharSequence, java.lang.Double> e0: this.machine_insights_mapping.entrySet()) {
        actualSize0++;
        out.startItem();
        out.writeString(e0.getKey());
        java.lang.Double v0 = e0.getValue();
        out.writeDouble(v0);
      }
      out.writeMapEnd();
      if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Map-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.canProfile = null;
      } else {
        this.canProfile = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.rank = null;
      } else {
        this.rank = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.profileName = null;
      } else {
        this.profileName = in.readString(this.profileName instanceof Utf8 ? (Utf8)this.profileName : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.machine_insights_mapping = null;
      } else {
        long size0 = in.readMapStart();
        java.util.Map<java.lang.CharSequence,java.lang.Double> m0 = this.machine_insights_mapping; // Need fresh name due to limitation of macro system
        if (m0 == null) {
          m0 = new java.util.HashMap<java.lang.CharSequence,java.lang.Double>((int)size0);
          this.machine_insights_mapping = m0;
        } else m0.clear();
        for ( ; 0 < size0; size0 = in.mapNext()) {
          for ( ; size0 != 0; size0--) {
            java.lang.CharSequence k0 = null;
            k0 = in.readString(k0 instanceof Utf8 ? (Utf8)k0 : null);
            java.lang.Double v0 = null;
            v0 = in.readDouble();
            m0.put(k0, v0);
          }
        }
      }

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.canProfile = null;
          } else {
            this.canProfile = in.readInt();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.rank = null;
          } else {
            this.rank = in.readInt();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.profileName = null;
          } else {
            this.profileName = in.readString(this.profileName instanceof Utf8 ? (Utf8)this.profileName : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.machine_insights_mapping = null;
          } else {
            long size0 = in.readMapStart();
            java.util.Map<java.lang.CharSequence,java.lang.Double> m0 = this.machine_insights_mapping; // Need fresh name due to limitation of macro system
            if (m0 == null) {
              m0 = new java.util.HashMap<java.lang.CharSequence,java.lang.Double>((int)size0);
              this.machine_insights_mapping = m0;
            } else m0.clear();
            for ( ; 0 < size0; size0 = in.mapNext()) {
              for ( ; size0 != 0; size0--) {
                java.lang.CharSequence k0 = null;
                k0 = in.readString(k0 instanceof Utf8 ? (Utf8)k0 : null);
                java.lang.Double v0 = null;
                v0 = in.readDouble();
                m0.put(k0, v0);
              }
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










