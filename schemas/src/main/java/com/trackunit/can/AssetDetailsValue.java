/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.trackunit.can;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Report containing asset details values */
@org.apache.avro.specific.AvroGenerated
public class AssetDetailsValue extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5271564377249329516L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AssetDetailsValue\",\"namespace\":\"com.trackunit.can\",\"doc\":\"Report containing asset details values\",\"fields\":[{\"name\":\"model\",\"type\":\"string\",\"doc\":\"Asset model name\"},{\"name\":\"brand\",\"type\":\"string\",\"doc\":\"Asset brand name\"},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"doc\":\"Asset type\",\"default\":null},{\"name\":\"canInstalls\",\"type\":\"int\",\"doc\":\"Number of CAN installs\",\"default\":0},{\"name\":\"installBase\",\"type\":\"int\",\"doc\":\"Installation base\",\"default\":0},{\"name\":\"canEligible\",\"type\":\"boolean\",\"doc\":\"CAN eligibility\",\"default\":false},{\"name\":\"productionYearRange\",\"type\":[\"null\",\"string\"],\"doc\":\"Asset production year range\",\"default\":null},{\"name\":\"specCheckId\",\"type\":[\"null\",\"int\"],\"doc\":\"Asset spec check id\",\"default\":null},{\"name\":\"canProfileDetails\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CanProfileDetail\",\"fields\":[{\"name\":\"canProfile\",\"type\":[\"null\",\"int\"],\"doc\":\"CAN profile ID\",\"default\":null},{\"name\":\"rank\",\"type\":[\"null\",\"int\"],\"doc\":\"CAN profile rank\",\"default\":null},{\"name\":\"profileName\",\"type\":[\"null\",\"string\"],\"doc\":\"Profile name\",\"default\":null},{\"name\":\"machine_insights_mapping\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"double\"}],\"doc\":\"Mapping of machine insights to average values\",\"default\":null}]}},\"doc\":\"List of can profile details with map of machine insight id and average values\",\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AssetDetailsValue> ENCODER =
      new BinaryMessageEncoder<AssetDetailsValue>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AssetDetailsValue> DECODER =
      new BinaryMessageDecoder<AssetDetailsValue>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AssetDetailsValue> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AssetDetailsValue> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AssetDetailsValue> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AssetDetailsValue>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AssetDetailsValue to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AssetDetailsValue from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AssetDetailsValue instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AssetDetailsValue fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Asset model name */
  @Deprecated public java.lang.CharSequence model;
  /** Asset brand name */
  @Deprecated public java.lang.CharSequence brand;
  /** Asset type */
  @Deprecated public java.lang.CharSequence type;
  /** Number of CAN installs */
  @Deprecated public int canInstalls;
  /** Installation base */
  @Deprecated public int installBase;
  /** CAN eligibility */
  @Deprecated public boolean canEligible;
  /** Asset production year range */
  @Deprecated public java.lang.CharSequence productionYearRange;
  /** Asset spec check id */
  @Deprecated public java.lang.Integer specCheckId;
  /** List of can profile details with map of machine insight id and average values */
  @Deprecated public java.util.List<com.trackunit.can.CanProfileDetail> canProfileDetails;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AssetDetailsValue() {}

  /**
   * All-args constructor.
   * @param model Asset model name
   * @param brand Asset brand name
   * @param type Asset type
   * @param canInstalls Number of CAN installs
   * @param installBase Installation base
   * @param canEligible CAN eligibility
   * @param productionYearRange Asset production year range
   * @param specCheckId Asset spec check id
   * @param canProfileDetails List of can profile details with map of machine insight id and average values
   */
  public AssetDetailsValue(java.lang.CharSequence model, java.lang.CharSequence brand, java.lang.CharSequence type, java.lang.Integer canInstalls, java.lang.Integer installBase, java.lang.Boolean canEligible, java.lang.CharSequence productionYearRange, java.lang.Integer specCheckId, java.util.List<com.trackunit.can.CanProfileDetail> canProfileDetails) {
    this.model = model;
    this.brand = brand;
    this.type = type;
    this.canInstalls = canInstalls;
    this.installBase = installBase;
    this.canEligible = canEligible;
    this.productionYearRange = productionYearRange;
    this.specCheckId = specCheckId;
    this.canProfileDetails = canProfileDetails;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return model;
    case 1: return brand;
    case 2: return type;
    case 3: return canInstalls;
    case 4: return installBase;
    case 5: return canEligible;
    case 6: return productionYearRange;
    case 7: return specCheckId;
    case 8: return canProfileDetails;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: model = (java.lang.CharSequence)value$; break;
    case 1: brand = (java.lang.CharSequence)value$; break;
    case 2: type = (java.lang.CharSequence)value$; break;
    case 3: canInstalls = (java.lang.Integer)value$; break;
    case 4: installBase = (java.lang.Integer)value$; break;
    case 5: canEligible = (java.lang.Boolean)value$; break;
    case 6: productionYearRange = (java.lang.CharSequence)value$; break;
    case 7: specCheckId = (java.lang.Integer)value$; break;
    case 8: canProfileDetails = (java.util.List<com.trackunit.can.CanProfileDetail>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'model' field.
   * @return Asset model name
   */
  public java.lang.CharSequence getModel() {
    return model;
  }


  /**
   * Sets the value of the 'model' field.
   * Asset model name
   * @param value the value to set.
   */
  public void setModel(java.lang.CharSequence value) {
    this.model = value;
  }

  /**
   * Gets the value of the 'brand' field.
   * @return Asset brand name
   */
  public java.lang.CharSequence getBrand() {
    return brand;
  }


  /**
   * Sets the value of the 'brand' field.
   * Asset brand name
   * @param value the value to set.
   */
  public void setBrand(java.lang.CharSequence value) {
    this.brand = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return Asset type
   */
  public java.lang.CharSequence getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * Asset type
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'canInstalls' field.
   * @return Number of CAN installs
   */
  public int getCanInstalls() {
    return canInstalls;
  }


  /**
   * Sets the value of the 'canInstalls' field.
   * Number of CAN installs
   * @param value the value to set.
   */
  public void setCanInstalls(int value) {
    this.canInstalls = value;
  }

  /**
   * Gets the value of the 'installBase' field.
   * @return Installation base
   */
  public int getInstallBase() {
    return installBase;
  }


  /**
   * Sets the value of the 'installBase' field.
   * Installation base
   * @param value the value to set.
   */
  public void setInstallBase(int value) {
    this.installBase = value;
  }

  /**
   * Gets the value of the 'canEligible' field.
   * @return CAN eligibility
   */
  public boolean getCanEligible() {
    return canEligible;
  }


  /**
   * Sets the value of the 'canEligible' field.
   * CAN eligibility
   * @param value the value to set.
   */
  public void setCanEligible(boolean value) {
    this.canEligible = value;
  }

  /**
   * Gets the value of the 'productionYearRange' field.
   * @return Asset production year range
   */
  public java.lang.CharSequence getProductionYearRange() {
    return productionYearRange;
  }


  /**
   * Sets the value of the 'productionYearRange' field.
   * Asset production year range
   * @param value the value to set.
   */
  public void setProductionYearRange(java.lang.CharSequence value) {
    this.productionYearRange = value;
  }

  /**
   * Gets the value of the 'specCheckId' field.
   * @return Asset spec check id
   */
  public java.lang.Integer getSpecCheckId() {
    return specCheckId;
  }


  /**
   * Sets the value of the 'specCheckId' field.
   * Asset spec check id
   * @param value the value to set.
   */
  public void setSpecCheckId(java.lang.Integer value) {
    this.specCheckId = value;
  }

  /**
   * Gets the value of the 'canProfileDetails' field.
   * @return List of can profile details with map of machine insight id and average values
   */
  public java.util.List<com.trackunit.can.CanProfileDetail> getCanProfileDetails() {
    return canProfileDetails;
  }


  /**
   * Sets the value of the 'canProfileDetails' field.
   * List of can profile details with map of machine insight id and average values
   * @param value the value to set.
   */
  public void setCanProfileDetails(java.util.List<com.trackunit.can.CanProfileDetail> value) {
    this.canProfileDetails = value;
  }

  /**
   * Creates a new AssetDetailsValue RecordBuilder.
   * @return A new AssetDetailsValue RecordBuilder
   */
  public static com.trackunit.can.AssetDetailsValue.Builder newBuilder() {
    return new com.trackunit.can.AssetDetailsValue.Builder();
  }

  /**
   * Creates a new AssetDetailsValue RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AssetDetailsValue RecordBuilder
   */
  public static com.trackunit.can.AssetDetailsValue.Builder newBuilder(com.trackunit.can.AssetDetailsValue.Builder other) {
    if (other == null) {
      return new com.trackunit.can.AssetDetailsValue.Builder();
    } else {
      return new com.trackunit.can.AssetDetailsValue.Builder(other);
    }
  }

  /**
   * Creates a new AssetDetailsValue RecordBuilder by copying an existing AssetDetailsValue instance.
   * @param other The existing instance to copy.
   * @return A new AssetDetailsValue RecordBuilder
   */
  public static com.trackunit.can.AssetDetailsValue.Builder newBuilder(com.trackunit.can.AssetDetailsValue other) {
    if (other == null) {
      return new com.trackunit.can.AssetDetailsValue.Builder();
    } else {
      return new com.trackunit.can.AssetDetailsValue.Builder(other);
    }
  }

  /**
   * RecordBuilder for AssetDetailsValue instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AssetDetailsValue>
    implements org.apache.avro.data.RecordBuilder<AssetDetailsValue> {

    /** Asset model name */
    private java.lang.CharSequence model;
    /** Asset brand name */
    private java.lang.CharSequence brand;
    /** Asset type */
    private java.lang.CharSequence type;
    /** Number of CAN installs */
    private int canInstalls;
    /** Installation base */
    private int installBase;
    /** CAN eligibility */
    private boolean canEligible;
    /** Asset production year range */
    private java.lang.CharSequence productionYearRange;
    /** Asset spec check id */
    private java.lang.Integer specCheckId;
    /** List of can profile details with map of machine insight id and average values */
    private java.util.List<com.trackunit.can.CanProfileDetail> canProfileDetails;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.trackunit.can.AssetDetailsValue.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.model)) {
        this.model = data().deepCopy(fields()[0].schema(), other.model);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.brand)) {
        this.brand = data().deepCopy(fields()[1].schema(), other.brand);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.canInstalls)) {
        this.canInstalls = data().deepCopy(fields()[3].schema(), other.canInstalls);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.installBase)) {
        this.installBase = data().deepCopy(fields()[4].schema(), other.installBase);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.canEligible)) {
        this.canEligible = data().deepCopy(fields()[5].schema(), other.canEligible);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.productionYearRange)) {
        this.productionYearRange = data().deepCopy(fields()[6].schema(), other.productionYearRange);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.specCheckId)) {
        this.specCheckId = data().deepCopy(fields()[7].schema(), other.specCheckId);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.canProfileDetails)) {
        this.canProfileDetails = data().deepCopy(fields()[8].schema(), other.canProfileDetails);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing AssetDetailsValue instance
     * @param other The existing instance to copy.
     */
    private Builder(com.trackunit.can.AssetDetailsValue other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.model)) {
        this.model = data().deepCopy(fields()[0].schema(), other.model);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.brand)) {
        this.brand = data().deepCopy(fields()[1].schema(), other.brand);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.canInstalls)) {
        this.canInstalls = data().deepCopy(fields()[3].schema(), other.canInstalls);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.installBase)) {
        this.installBase = data().deepCopy(fields()[4].schema(), other.installBase);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.canEligible)) {
        this.canEligible = data().deepCopy(fields()[5].schema(), other.canEligible);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.productionYearRange)) {
        this.productionYearRange = data().deepCopy(fields()[6].schema(), other.productionYearRange);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.specCheckId)) {
        this.specCheckId = data().deepCopy(fields()[7].schema(), other.specCheckId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.canProfileDetails)) {
        this.canProfileDetails = data().deepCopy(fields()[8].schema(), other.canProfileDetails);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'model' field.
      * Asset model name
      * @return The value.
      */
    public java.lang.CharSequence getModel() {
      return model;
    }


    /**
      * Sets the value of the 'model' field.
      * Asset model name
      * @param value The value of 'model'.
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder setModel(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.model = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'model' field has been set.
      * Asset model name
      * @return True if the 'model' field has been set, false otherwise.
      */
    public boolean hasModel() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'model' field.
      * Asset model name
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder clearModel() {
      model = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'brand' field.
      * Asset brand name
      * @return The value.
      */
    public java.lang.CharSequence getBrand() {
      return brand;
    }


    /**
      * Sets the value of the 'brand' field.
      * Asset brand name
      * @param value The value of 'brand'.
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder setBrand(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.brand = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'brand' field has been set.
      * Asset brand name
      * @return True if the 'brand' field has been set, false otherwise.
      */
    public boolean hasBrand() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'brand' field.
      * Asset brand name
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder clearBrand() {
      brand = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * Asset type
      * @return The value.
      */
    public java.lang.CharSequence getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * Asset type
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder setType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * Asset type
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'type' field.
      * Asset type
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder clearType() {
      type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'canInstalls' field.
      * Number of CAN installs
      * @return The value.
      */
    public int getCanInstalls() {
      return canInstalls;
    }


    /**
      * Sets the value of the 'canInstalls' field.
      * Number of CAN installs
      * @param value The value of 'canInstalls'.
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder setCanInstalls(int value) {
      validate(fields()[3], value);
      this.canInstalls = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'canInstalls' field has been set.
      * Number of CAN installs
      * @return True if the 'canInstalls' field has been set, false otherwise.
      */
    public boolean hasCanInstalls() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'canInstalls' field.
      * Number of CAN installs
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder clearCanInstalls() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'installBase' field.
      * Installation base
      * @return The value.
      */
    public int getInstallBase() {
      return installBase;
    }


    /**
      * Sets the value of the 'installBase' field.
      * Installation base
      * @param value The value of 'installBase'.
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder setInstallBase(int value) {
      validate(fields()[4], value);
      this.installBase = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'installBase' field has been set.
      * Installation base
      * @return True if the 'installBase' field has been set, false otherwise.
      */
    public boolean hasInstallBase() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'installBase' field.
      * Installation base
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder clearInstallBase() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'canEligible' field.
      * CAN eligibility
      * @return The value.
      */
    public boolean getCanEligible() {
      return canEligible;
    }


    /**
      * Sets the value of the 'canEligible' field.
      * CAN eligibility
      * @param value The value of 'canEligible'.
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder setCanEligible(boolean value) {
      validate(fields()[5], value);
      this.canEligible = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'canEligible' field has been set.
      * CAN eligibility
      * @return True if the 'canEligible' field has been set, false otherwise.
      */
    public boolean hasCanEligible() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'canEligible' field.
      * CAN eligibility
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder clearCanEligible() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'productionYearRange' field.
      * Asset production year range
      * @return The value.
      */
    public java.lang.CharSequence getProductionYearRange() {
      return productionYearRange;
    }


    /**
      * Sets the value of the 'productionYearRange' field.
      * Asset production year range
      * @param value The value of 'productionYearRange'.
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder setProductionYearRange(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.productionYearRange = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'productionYearRange' field has been set.
      * Asset production year range
      * @return True if the 'productionYearRange' field has been set, false otherwise.
      */
    public boolean hasProductionYearRange() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'productionYearRange' field.
      * Asset production year range
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder clearProductionYearRange() {
      productionYearRange = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'specCheckId' field.
      * Asset spec check id
      * @return The value.
      */
    public java.lang.Integer getSpecCheckId() {
      return specCheckId;
    }


    /**
      * Sets the value of the 'specCheckId' field.
      * Asset spec check id
      * @param value The value of 'specCheckId'.
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder setSpecCheckId(java.lang.Integer value) {
      validate(fields()[7], value);
      this.specCheckId = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'specCheckId' field has been set.
      * Asset spec check id
      * @return True if the 'specCheckId' field has been set, false otherwise.
      */
    public boolean hasSpecCheckId() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'specCheckId' field.
      * Asset spec check id
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder clearSpecCheckId() {
      specCheckId = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'canProfileDetails' field.
      * List of can profile details with map of machine insight id and average values
      * @return The value.
      */
    public java.util.List<com.trackunit.can.CanProfileDetail> getCanProfileDetails() {
      return canProfileDetails;
    }


    /**
      * Sets the value of the 'canProfileDetails' field.
      * List of can profile details with map of machine insight id and average values
      * @param value The value of 'canProfileDetails'.
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder setCanProfileDetails(java.util.List<com.trackunit.can.CanProfileDetail> value) {
      validate(fields()[8], value);
      this.canProfileDetails = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'canProfileDetails' field has been set.
      * List of can profile details with map of machine insight id and average values
      * @return True if the 'canProfileDetails' field has been set, false otherwise.
      */
    public boolean hasCanProfileDetails() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'canProfileDetails' field.
      * List of can profile details with map of machine insight id and average values
      * @return This builder.
      */
    public com.trackunit.can.AssetDetailsValue.Builder clearCanProfileDetails() {
      canProfileDetails = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AssetDetailsValue build() {
      try {
        AssetDetailsValue record = new AssetDetailsValue();
        record.model = fieldSetFlags()[0] ? this.model : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.brand = fieldSetFlags()[1] ? this.brand : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.type = fieldSetFlags()[2] ? this.type : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.canInstalls = fieldSetFlags()[3] ? this.canInstalls : (java.lang.Integer) defaultValue(fields()[3]);
        record.installBase = fieldSetFlags()[4] ? this.installBase : (java.lang.Integer) defaultValue(fields()[4]);
        record.canEligible = fieldSetFlags()[5] ? this.canEligible : (java.lang.Boolean) defaultValue(fields()[5]);
        record.productionYearRange = fieldSetFlags()[6] ? this.productionYearRange : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.specCheckId = fieldSetFlags()[7] ? this.specCheckId : (java.lang.Integer) defaultValue(fields()[7]);
        record.canProfileDetails = fieldSetFlags()[8] ? this.canProfileDetails : (java.util.List<com.trackunit.can.CanProfileDetail>) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AssetDetailsValue>
    WRITER$ = (org.apache.avro.io.DatumWriter<AssetDetailsValue>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AssetDetailsValue>
    READER$ = (org.apache.avro.io.DatumReader<AssetDetailsValue>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.model);

    out.writeString(this.brand);

    if (this.type == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.type);
    }

    out.writeInt(this.canInstalls);

    out.writeInt(this.installBase);

    out.writeBoolean(this.canEligible);

    if (this.productionYearRange == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.productionYearRange);
    }

    if (this.specCheckId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.specCheckId);
    }

    long size0 = this.canProfileDetails.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (com.trackunit.can.CanProfileDetail e0: this.canProfileDetails) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.model = in.readString(this.model instanceof Utf8 ? (Utf8)this.model : null);

      this.brand = in.readString(this.brand instanceof Utf8 ? (Utf8)this.brand : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.type = null;
      } else {
        this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);
      }

      this.canInstalls = in.readInt();

      this.installBase = in.readInt();

      this.canEligible = in.readBoolean();

      if (in.readIndex() != 1) {
        in.readNull();
        this.productionYearRange = null;
      } else {
        this.productionYearRange = in.readString(this.productionYearRange instanceof Utf8 ? (Utf8)this.productionYearRange : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.specCheckId = null;
      } else {
        this.specCheckId = in.readInt();
      }

      long size0 = in.readArrayStart();
      java.util.List<com.trackunit.can.CanProfileDetail> a0 = this.canProfileDetails;
      if (a0 == null) {
        a0 = new SpecificData.Array<com.trackunit.can.CanProfileDetail>((int)size0, SCHEMA$.getField("canProfileDetails").schema());
        this.canProfileDetails = a0;
      } else a0.clear();
      SpecificData.Array<com.trackunit.can.CanProfileDetail> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.trackunit.can.CanProfileDetail>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          com.trackunit.can.CanProfileDetail e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new com.trackunit.can.CanProfileDetail();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.model = in.readString(this.model instanceof Utf8 ? (Utf8)this.model : null);
          break;

        case 1:
          this.brand = in.readString(this.brand instanceof Utf8 ? (Utf8)this.brand : null);
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.type = null;
          } else {
            this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);
          }
          break;

        case 3:
          this.canInstalls = in.readInt();
          break;

        case 4:
          this.installBase = in.readInt();
          break;

        case 5:
          this.canEligible = in.readBoolean();
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.productionYearRange = null;
          } else {
            this.productionYearRange = in.readString(this.productionYearRange instanceof Utf8 ? (Utf8)this.productionYearRange : null);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.specCheckId = null;
          } else {
            this.specCheckId = in.readInt();
          }
          break;

        case 8:
          long size0 = in.readArrayStart();
          java.util.List<com.trackunit.can.CanProfileDetail> a0 = this.canProfileDetails;
          if (a0 == null) {
            a0 = new SpecificData.Array<com.trackunit.can.CanProfileDetail>((int)size0, SCHEMA$.getField("canProfileDetails").schema());
            this.canProfileDetails = a0;
          } else a0.clear();
          SpecificData.Array<com.trackunit.can.CanProfileDetail> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.trackunit.can.CanProfileDetail>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              com.trackunit.can.CanProfileDetail e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new com.trackunit.can.CanProfileDetail();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










