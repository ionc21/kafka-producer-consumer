/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.trackunit.avro.organization;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AccountValue extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 967665721351904315L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AccountValue\",\"namespace\":\"com.trackunit.avro.organization\",\"fields\":[{\"name\":\"Id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"ParentId\",\"type\":[\"null\",{\"type\":\"string\",\"logicalType\":\"uuid\"}]},{\"name\":\"FmsCustomerId\",\"type\":\"int\"},{\"name\":\"Name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"IsExternal\",\"type\":\"boolean\"},{\"name\":\"TimeZoneId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"IANA time zone identifier\",\"default\":\"UTC\"},{\"name\":\"Authorities\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"Account authorities\",\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AccountValue> ENCODER =
      new BinaryMessageEncoder<AccountValue>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AccountValue> DECODER =
      new BinaryMessageDecoder<AccountValue>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AccountValue> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AccountValue> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AccountValue> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AccountValue>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AccountValue to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AccountValue from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AccountValue instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AccountValue fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence Id;
  @Deprecated public java.lang.CharSequence ParentId;
  @Deprecated public int FmsCustomerId;
  @Deprecated public java.lang.CharSequence Name;
  @Deprecated public java.lang.CharSequence Type;
  @Deprecated public boolean IsExternal;
  /** IANA time zone identifier */
  @Deprecated public java.lang.CharSequence TimeZoneId;
  /** Account authorities */
  @Deprecated public java.util.List<java.lang.CharSequence> Authorities;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AccountValue() {}

  /**
   * All-args constructor.
   * @param Id The new value for Id
   * @param ParentId The new value for ParentId
   * @param FmsCustomerId The new value for FmsCustomerId
   * @param Name The new value for Name
   * @param Type The new value for Type
   * @param IsExternal The new value for IsExternal
   * @param TimeZoneId IANA time zone identifier
   * @param Authorities Account authorities
   */
  public AccountValue(java.lang.CharSequence Id, java.lang.CharSequence ParentId, java.lang.Integer FmsCustomerId, java.lang.CharSequence Name, java.lang.CharSequence Type, java.lang.Boolean IsExternal, java.lang.CharSequence TimeZoneId, java.util.List<java.lang.CharSequence> Authorities) {
    this.Id = Id;
    this.ParentId = ParentId;
    this.FmsCustomerId = FmsCustomerId;
    this.Name = Name;
    this.Type = Type;
    this.IsExternal = IsExternal;
    this.TimeZoneId = TimeZoneId;
    this.Authorities = Authorities;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return Id;
    case 1: return ParentId;
    case 2: return FmsCustomerId;
    case 3: return Name;
    case 4: return Type;
    case 5: return IsExternal;
    case 6: return TimeZoneId;
    case 7: return Authorities;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: Id = (java.lang.CharSequence)value$; break;
    case 1: ParentId = (java.lang.CharSequence)value$; break;
    case 2: FmsCustomerId = (java.lang.Integer)value$; break;
    case 3: Name = (java.lang.CharSequence)value$; break;
    case 4: Type = (java.lang.CharSequence)value$; break;
    case 5: IsExternal = (java.lang.Boolean)value$; break;
    case 6: TimeZoneId = (java.lang.CharSequence)value$; break;
    case 7: Authorities = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'Id' field.
   * @return The value of the 'Id' field.
   */
  public java.lang.CharSequence getId() {
    return Id;
  }


  /**
   * Sets the value of the 'Id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.Id = value;
  }

  /**
   * Gets the value of the 'ParentId' field.
   * @return The value of the 'ParentId' field.
   */
  public java.lang.CharSequence getParentId() {
    return ParentId;
  }


  /**
   * Sets the value of the 'ParentId' field.
   * @param value the value to set.
   */
  public void setParentId(java.lang.CharSequence value) {
    this.ParentId = value;
  }

  /**
   * Gets the value of the 'FmsCustomerId' field.
   * @return The value of the 'FmsCustomerId' field.
   */
  public int getFmsCustomerId() {
    return FmsCustomerId;
  }


  /**
   * Sets the value of the 'FmsCustomerId' field.
   * @param value the value to set.
   */
  public void setFmsCustomerId(int value) {
    this.FmsCustomerId = value;
  }

  /**
   * Gets the value of the 'Name' field.
   * @return The value of the 'Name' field.
   */
  public java.lang.CharSequence getName() {
    return Name;
  }


  /**
   * Sets the value of the 'Name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.Name = value;
  }

  /**
   * Gets the value of the 'Type' field.
   * @return The value of the 'Type' field.
   */
  public java.lang.CharSequence getType() {
    return Type;
  }


  /**
   * Sets the value of the 'Type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.Type = value;
  }

  /**
   * Gets the value of the 'IsExternal' field.
   * @return The value of the 'IsExternal' field.
   */
  public boolean getIsExternal() {
    return IsExternal;
  }


  /**
   * Sets the value of the 'IsExternal' field.
   * @param value the value to set.
   */
  public void setIsExternal(boolean value) {
    this.IsExternal = value;
  }

  /**
   * Gets the value of the 'TimeZoneId' field.
   * @return IANA time zone identifier
   */
  public java.lang.CharSequence getTimeZoneId() {
    return TimeZoneId;
  }


  /**
   * Sets the value of the 'TimeZoneId' field.
   * IANA time zone identifier
   * @param value the value to set.
   */
  public void setTimeZoneId(java.lang.CharSequence value) {
    this.TimeZoneId = value;
  }

  /**
   * Gets the value of the 'Authorities' field.
   * @return Account authorities
   */
  public java.util.List<java.lang.CharSequence> getAuthorities() {
    return Authorities;
  }


  /**
   * Sets the value of the 'Authorities' field.
   * Account authorities
   * @param value the value to set.
   */
  public void setAuthorities(java.util.List<java.lang.CharSequence> value) {
    this.Authorities = value;
  }

  /**
   * Creates a new AccountValue RecordBuilder.
   * @return A new AccountValue RecordBuilder
   */
  public static com.trackunit.avro.organization.AccountValue.Builder newBuilder() {
    return new com.trackunit.avro.organization.AccountValue.Builder();
  }

  /**
   * Creates a new AccountValue RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AccountValue RecordBuilder
   */
  public static com.trackunit.avro.organization.AccountValue.Builder newBuilder(com.trackunit.avro.organization.AccountValue.Builder other) {
    if (other == null) {
      return new com.trackunit.avro.organization.AccountValue.Builder();
    } else {
      return new com.trackunit.avro.organization.AccountValue.Builder(other);
    }
  }

  /**
   * Creates a new AccountValue RecordBuilder by copying an existing AccountValue instance.
   * @param other The existing instance to copy.
   * @return A new AccountValue RecordBuilder
   */
  public static com.trackunit.avro.organization.AccountValue.Builder newBuilder(com.trackunit.avro.organization.AccountValue other) {
    if (other == null) {
      return new com.trackunit.avro.organization.AccountValue.Builder();
    } else {
      return new com.trackunit.avro.organization.AccountValue.Builder(other);
    }
  }

  /**
   * RecordBuilder for AccountValue instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AccountValue>
    implements org.apache.avro.data.RecordBuilder<AccountValue> {

    private java.lang.CharSequence Id;
    private java.lang.CharSequence ParentId;
    private int FmsCustomerId;
    private java.lang.CharSequence Name;
    private java.lang.CharSequence Type;
    private boolean IsExternal;
    /** IANA time zone identifier */
    private java.lang.CharSequence TimeZoneId;
    /** Account authorities */
    private java.util.List<java.lang.CharSequence> Authorities;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.trackunit.avro.organization.AccountValue.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.Id)) {
        this.Id = data().deepCopy(fields()[0].schema(), other.Id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.ParentId)) {
        this.ParentId = data().deepCopy(fields()[1].schema(), other.ParentId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.FmsCustomerId)) {
        this.FmsCustomerId = data().deepCopy(fields()[2].schema(), other.FmsCustomerId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.Name)) {
        this.Name = data().deepCopy(fields()[3].schema(), other.Name);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.Type)) {
        this.Type = data().deepCopy(fields()[4].schema(), other.Type);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.IsExternal)) {
        this.IsExternal = data().deepCopy(fields()[5].schema(), other.IsExternal);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.TimeZoneId)) {
        this.TimeZoneId = data().deepCopy(fields()[6].schema(), other.TimeZoneId);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.Authorities)) {
        this.Authorities = data().deepCopy(fields()[7].schema(), other.Authorities);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing AccountValue instance
     * @param other The existing instance to copy.
     */
    private Builder(com.trackunit.avro.organization.AccountValue other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.Id)) {
        this.Id = data().deepCopy(fields()[0].schema(), other.Id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ParentId)) {
        this.ParentId = data().deepCopy(fields()[1].schema(), other.ParentId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.FmsCustomerId)) {
        this.FmsCustomerId = data().deepCopy(fields()[2].schema(), other.FmsCustomerId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Name)) {
        this.Name = data().deepCopy(fields()[3].schema(), other.Name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Type)) {
        this.Type = data().deepCopy(fields()[4].schema(), other.Type);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.IsExternal)) {
        this.IsExternal = data().deepCopy(fields()[5].schema(), other.IsExternal);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.TimeZoneId)) {
        this.TimeZoneId = data().deepCopy(fields()[6].schema(), other.TimeZoneId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.Authorities)) {
        this.Authorities = data().deepCopy(fields()[7].schema(), other.Authorities);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'Id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return Id;
    }


    /**
      * Sets the value of the 'Id' field.
      * @param value The value of 'Id'.
      * @return This builder.
      */
    public com.trackunit.avro.organization.AccountValue.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.Id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'Id' field has been set.
      * @return True if the 'Id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'Id' field.
      * @return This builder.
      */
    public com.trackunit.avro.organization.AccountValue.Builder clearId() {
      Id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'ParentId' field.
      * @return The value.
      */
    public java.lang.CharSequence getParentId() {
      return ParentId;
    }


    /**
      * Sets the value of the 'ParentId' field.
      * @param value The value of 'ParentId'.
      * @return This builder.
      */
    public com.trackunit.avro.organization.AccountValue.Builder setParentId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.ParentId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'ParentId' field has been set.
      * @return True if the 'ParentId' field has been set, false otherwise.
      */
    public boolean hasParentId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'ParentId' field.
      * @return This builder.
      */
    public com.trackunit.avro.organization.AccountValue.Builder clearParentId() {
      ParentId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'FmsCustomerId' field.
      * @return The value.
      */
    public int getFmsCustomerId() {
      return FmsCustomerId;
    }


    /**
      * Sets the value of the 'FmsCustomerId' field.
      * @param value The value of 'FmsCustomerId'.
      * @return This builder.
      */
    public com.trackunit.avro.organization.AccountValue.Builder setFmsCustomerId(int value) {
      validate(fields()[2], value);
      this.FmsCustomerId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'FmsCustomerId' field has been set.
      * @return True if the 'FmsCustomerId' field has been set, false otherwise.
      */
    public boolean hasFmsCustomerId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'FmsCustomerId' field.
      * @return This builder.
      */
    public com.trackunit.avro.organization.AccountValue.Builder clearFmsCustomerId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'Name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return Name;
    }


    /**
      * Sets the value of the 'Name' field.
      * @param value The value of 'Name'.
      * @return This builder.
      */
    public com.trackunit.avro.organization.AccountValue.Builder setName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.Name = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'Name' field has been set.
      * @return True if the 'Name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'Name' field.
      * @return This builder.
      */
    public com.trackunit.avro.organization.AccountValue.Builder clearName() {
      Name = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'Type' field.
      * @return The value.
      */
    public java.lang.CharSequence getType() {
      return Type;
    }


    /**
      * Sets the value of the 'Type' field.
      * @param value The value of 'Type'.
      * @return This builder.
      */
    public com.trackunit.avro.organization.AccountValue.Builder setType(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.Type = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'Type' field has been set.
      * @return True if the 'Type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'Type' field.
      * @return This builder.
      */
    public com.trackunit.avro.organization.AccountValue.Builder clearType() {
      Type = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'IsExternal' field.
      * @return The value.
      */
    public boolean getIsExternal() {
      return IsExternal;
    }


    /**
      * Sets the value of the 'IsExternal' field.
      * @param value The value of 'IsExternal'.
      * @return This builder.
      */
    public com.trackunit.avro.organization.AccountValue.Builder setIsExternal(boolean value) {
      validate(fields()[5], value);
      this.IsExternal = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'IsExternal' field has been set.
      * @return True if the 'IsExternal' field has been set, false otherwise.
      */
    public boolean hasIsExternal() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'IsExternal' field.
      * @return This builder.
      */
    public com.trackunit.avro.organization.AccountValue.Builder clearIsExternal() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'TimeZoneId' field.
      * IANA time zone identifier
      * @return The value.
      */
    public java.lang.CharSequence getTimeZoneId() {
      return TimeZoneId;
    }


    /**
      * Sets the value of the 'TimeZoneId' field.
      * IANA time zone identifier
      * @param value The value of 'TimeZoneId'.
      * @return This builder.
      */
    public com.trackunit.avro.organization.AccountValue.Builder setTimeZoneId(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.TimeZoneId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'TimeZoneId' field has been set.
      * IANA time zone identifier
      * @return True if the 'TimeZoneId' field has been set, false otherwise.
      */
    public boolean hasTimeZoneId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'TimeZoneId' field.
      * IANA time zone identifier
      * @return This builder.
      */
    public com.trackunit.avro.organization.AccountValue.Builder clearTimeZoneId() {
      TimeZoneId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'Authorities' field.
      * Account authorities
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getAuthorities() {
      return Authorities;
    }


    /**
      * Sets the value of the 'Authorities' field.
      * Account authorities
      * @param value The value of 'Authorities'.
      * @return This builder.
      */
    public com.trackunit.avro.organization.AccountValue.Builder setAuthorities(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[7], value);
      this.Authorities = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'Authorities' field has been set.
      * Account authorities
      * @return True if the 'Authorities' field has been set, false otherwise.
      */
    public boolean hasAuthorities() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'Authorities' field.
      * Account authorities
      * @return This builder.
      */
    public com.trackunit.avro.organization.AccountValue.Builder clearAuthorities() {
      Authorities = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AccountValue build() {
      try {
        AccountValue record = new AccountValue();
        record.Id = fieldSetFlags()[0] ? this.Id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.ParentId = fieldSetFlags()[1] ? this.ParentId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.FmsCustomerId = fieldSetFlags()[2] ? this.FmsCustomerId : (java.lang.Integer) defaultValue(fields()[2]);
        record.Name = fieldSetFlags()[3] ? this.Name : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.Type = fieldSetFlags()[4] ? this.Type : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.IsExternal = fieldSetFlags()[5] ? this.IsExternal : (java.lang.Boolean) defaultValue(fields()[5]);
        record.TimeZoneId = fieldSetFlags()[6] ? this.TimeZoneId : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.Authorities = fieldSetFlags()[7] ? this.Authorities : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AccountValue>
    WRITER$ = (org.apache.avro.io.DatumWriter<AccountValue>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AccountValue>
    READER$ = (org.apache.avro.io.DatumReader<AccountValue>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










